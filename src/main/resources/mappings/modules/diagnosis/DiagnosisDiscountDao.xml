<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunnex.ops.erp.modules.diagnosis.dao.DiagnosisDiscountDao">
    
	<sql id="diagnosisDiscountColumns">
		a.id AS "id",
		a.split_id AS "splitId",
		a.title AS "title",
		a.content AS "content",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="diagnosisDiscountJoins">
	</sql>
    
	<select id="get" resultType="DiagnosisDiscount">
		SELECT 
			<include refid="diagnosisDiscountColumns"/>
		FROM diagnosis_discount a
		<include refid="diagnosisDiscountJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="DiagnosisDiscount">
		SELECT 
			<include refid="diagnosisDiscountColumns"/>
		FROM diagnosis_discount a
		<include refid="diagnosisDiscountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="title != null and title != ''">
				AND a.title LIKE 
					<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="DiagnosisDiscount">
		SELECT 
			<include refid="diagnosisDiscountColumns"/>
		FROM diagnosis_discount a
		<include refid="diagnosisDiscountJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO diagnosis_discount(
			id,
			split_id,
			title,
			content,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{splitId},
			#{title},
			#{content},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE diagnosis_discount SET 	
			split_id = #{splitId},
			title = #{title},
			content = #{content},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE diagnosis_discount SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
    
    <select id="findBySplitId" resultType="DiagnosisDiscount">
        SELECT 
            <include refid="diagnosisDiscountColumns"/>
        FROM diagnosis_discount a
        WHERE split_id = #{splitId}
    </select>
    
    <delete id="deleteBySplitId">
        DELETE FROM diagnosis_discount WHERE split_id = #{splitId}
    </delete>
    
    <insert id="saveBatch">
       <if test="list != null and list.size > 0">
	       INSERT INTO diagnosis_discount(
	            id,
	            split_id,
	            title,
	            content,
	            create_by,
	            create_date,
	            update_by,
	            update_date,
	            remarks,
	            del_flag
	        ) VALUES
	        <foreach collection="list" item="item" index="index" separator=",">
	            (
		            #{item.id},
					#{item.splitId},
					#{item.title},
					#{item.content},
					#{item.createBy.id},
					#{item.createDate},
					#{item.updateBy.id},
					#{item.updateDate},
					#{item.remarks},
					#{item.delFlag}
	            )
	        </foreach>
        </if>
    </insert>
	
</mapper>